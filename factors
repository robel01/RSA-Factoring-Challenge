#!/usr/bin/python3
import random
import sys
import concurrent.futures


def gcd(a, b):
    while b:
        a, b = b, a % b
    return a


def algo_test2(n, iterations=200000):
    x = random.randint(0, n - 1)
    y = x
    c = random.randint(0, n - 1)
    g = 1
    for _ in range(iterations):
        x = ((x * x) + c) % n
        y = ((y * y) + c) % n
        y = ((y * y) + c) % n
        g = gcd(abs(x - y), n)
        if g != 1:
            break
    if g == n:
        return None
    return g


def factorize_me(n):
    for i in range(20):
        factor = algo_test2(n)
        if factor is not None:
            print("{}={}*{}".format(n, factor, n // factor))
            break
    else:
        if n % 2 == 0:
            print("{}={}*{}".format(n, n // 2, 2))
        else:
            print("{}={}*{}".format(n, 1, n))


def main():
    if len(sys.argv) != 2:
        print("Usage: factors <file>")
        sys.exit(1)

    try:
        with open(sys.argv[1], 'r') as f:
            numbers = [int(line.strip()) for line in f]
        with concurrent.futures.ThreadPoolExecutor() as executor:
            executor.map(factorize_me, numbers)
    except IOError:
        print("Error: Unable to open file {}".format(sys.argv[1]))
        sys.exit(2)


if __name__ == '__main__':
    main()
